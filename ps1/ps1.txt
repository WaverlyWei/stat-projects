{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red196\green26\blue22;}
\margl1440\margr1440\vieww19680\viewh11840\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \CocoaLigature0 PS1_STAT243\
NAME: LINQING WEI \
ID: 303-262-5910\
\
\
Solution for 2a:\
#Download the file as a zip file using wget and unzip it into cvs format \
#put data only for countries / regions into two separate files \
#grep only 2005 data(grep), remove double quotes(sed), only display \'93countries\'94 and \'93harvested values\'94 column(cut), sort reversely (sort -r) and display the largest five values(head). \
#The above command is put into a variable such that it could be reused later. \
#automating the action by setting \'93for loop\'94 \
\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 output=$(wget \'93
\f1 \expnd0\expndtw0\kerning0
http://data.un.org/Handlers/DownloadHandler.ashx?DataFilter=itemCode:526&DataMartId=FAO&Format=csv&c=2,3,4,5,6,7&s=countryName:asc, elementCode:asc,year:desc\'94 
\f2 \kerning1\expnd0\expndtw0  
\f0 \expnd0\expndtw0\kerning0
-O file.zip | unzip -p )\
\
\kerning1\expnd0\expndtw0 \CocoaLigature0 echo | cut -d ',' -f1 -f3 -f4 -f5 -f6 > countries.csv\
echo | cut -d ',' -f2 -f3 -f4 -f5 -f6> regions.csv\expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
action=$(grep 2005 countries. csv| sed 's/\\"//g' | \kerning1\expnd0\expndtw0 \CocoaLigature0 cut -d ',' -f1 -f6 | sort -k6 -t\'92,\'92 -r | head -5)\
\
for i in $\{1965..2005..10\};do\
    $\{i\}: $\expnd0\expndtw0\kerning0
\CocoaLigature1 (grep \{i\} $output| sed 's/\\"//g' | \kerning1\expnd0\expndtw0 \CocoaLigature0 cut -d ',' -f1 -f6 | sort -k6 -t\'92,\'92 -r | head -5)    \
\expnd0\expndtw0\kerning0
\CocoaLigature1 done \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\
\
Solution for 2b\
#create a function fun_try which takes one input \
#Check the number of inputs \
#Create a help message for fun_try if func_try is called with \'93-h\'94 \
#concatenate link and user input, use wget to download the file \
\
\
\pard\tx529\pardeftab529\pardirnatural
\cf0 #!/bin/bash\
func_try () \{\
if [ "$#" != "1" ]; then\
echo "Wrong number"\
\
elif [ \'93$1\'94 == \'93-h\'94 ]; then\
echo \'93UserGuide-Please input only one arg\'94 \
\
else\
a='http://data.un.org/Handlers/DownloadHandler.ashx?DataFilter=itemCode:'\
b=$1\
c='&DataMartId=FAO&Format=csv&c=2,3,4,5,6,7&s=countryName:asc, elementCode:asc,year:desc'\
q=\\'\
qq=\\'\
d=$q$a$b$c$qq\
echo $d\
wget $d -O file.zip | unzip -p\
fi\
\}\
\
#test \
#func_try 526\
#func_try 526 527\
\
\
\
\
Solution for #3:\
#Download the file as index.html using wget \
#use sed to only extract the name of each file from index.html and only grep the ones with \'93txt\'94 extension and store the names as \'93store.txt\'94 file\
#create fun_print to reading each line (\'93while read p\'94) from store.txt and concatenate with the url.\
#print the action to screen \
#use wget to download the file as the same time \
\
\
\
!/bin/bash\
wget "{\field{\*\fldinst{HYPERLINK "https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/"}}{\fldrslt https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/}}" temp  \
echo |sed -n 's/.*href="\\([^"]*\\).*/\\1/p' index.html | grep txt >store.txt \
\
func_print () \{\
a=https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/\
\pard\tx529\pardeftab529\pardirnatural
\cf2 while\cf0  \cf2 read\cf0  p; \cf2 do\cf0 \
d=$a$p\
echo \cf3 "Downloading file"\cf0  $p\
wget $d -O temp\
\cf2 done\cf0  <store.txt\
\
\
Solution for #4\
#create year_1 year_2 and set echo=False to store the start and end year \
#Use SweaveOpts to print out the text to screen\
#Modify the width of figure using fig.width = 5\
\
\
\\documentclass\{article\}\
\
\\begin\{document\}\
<<plot, echo=FALSE>>=\
year_1 <- start(LakeHuron)\
year_2 <- end(LakeHuron)\
\
@\
\
\\SweaveOpts\{concordance=TRUE\}\
The height of the water level in Lake Huron fluctuates over time. Here I analyze the variation using R. I show a histogram of the lake levels for the period \\Sexpr\{year_1[1]\} to \\Sexpr\{year_2[1]\}\
\
\
\
\
<<plot,fig.width=5, fig=TRUE>>=\
hist(LakeHuron)\
lowHi <- c(which.min(LakeHuron), which.max(LakeHuron)) \
yearExtrema <- attributes(LakeHuron)$tsp[1]-1 + lowHi\
@\
\
\
\\end\{document\}\
\
\
\
\
\
\
\
}